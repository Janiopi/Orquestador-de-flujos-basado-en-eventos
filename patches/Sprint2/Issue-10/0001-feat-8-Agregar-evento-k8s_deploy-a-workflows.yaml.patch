From ac9ed938056f6bfd830f824aa93b29d7c0b24568 Mon Sep 17 00:00:00 2001
From: Jun1el <latorrevasquezandressebastian@gmail.com>
Date: Thu, 26 Jun 2025 11:27:56 -0500
Subject: [PATCH 1/3] feat[#8]: Agregar evento k8s_deploy a workflows.yaml

---
 docs/workflows.yaml     |  5 +++-
 requirements.txt        |  2 ++
 tests/test_workflows.py | 51 +++++++++++++++++++++++++++++++++++++++++
 3 files changed, 57 insertions(+), 1 deletion(-)
 create mode 100644 tests/test_workflows.py

diff --git a/docs/workflows.yaml b/docs/workflows.yaml
index 2ddd697..82bdd1c 100644
--- a/docs/workflows.yaml
+++ b/docs/workflows.yaml
@@ -4,4 +4,7 @@ workflows:
     action: /app/scripts/process_data.sh <file>
   - event: message_received
     queue: redis://redis:6379/0
-    action: python /app/src/notify.py
\ No newline at end of file
+    action: python /app/src/notify.py
+  - event: k8s_deploy
+    manifest: /app/k8s/<manifest>
+    action: python /app/src/k8s_deploy.py <manifest>
\ No newline at end of file
diff --git a/requirements.txt b/requirements.txt
index bd060e8..22957f0 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -22,3 +22,5 @@ redis==6.2.0
 tomli==2.2.1
 typing_extensions==4.14.0
 watchdog==6.0.0
+kubernetes==30.1.0
+jsonschema==4.22.0
diff --git a/tests/test_workflows.py b/tests/test_workflows.py
new file mode 100644
index 0000000..a425aae
--- /dev/null
+++ b/tests/test_workflows.py
@@ -0,0 +1,51 @@
+import pytest
+import yaml
+import jsonschema
+from jsonschema import validate
+
+# Definimos el esquema afuera para poder reutilizarlo en los tests
+schema = {
+    "type": "object",
+    "properties": {
+        "workflows": {
+            "type": "array",
+            "items": {
+                "type": "object",
+                "properties": {
+                    "event": {"type": "string", "enum": ["file_created", "message_received", "k8s_deploy"]},
+                    "path": {"type": "string"},
+                    "queue": {"type": "string"},
+                    "manifest": {"type": "string"},
+                    "action": {"type": "string"},
+                },
+                "required": ["event", "action"],
+                "if": {"properties": {"event": {"const": "file_created"}}},
+                "then": {"required": ["path"]},
+                "else": {
+                    "if": {"properties": {"event": {"const": "message_received"}}},
+                    "then": {"required": ["queue"]}
+                }
+            }
+        }
+    },
+    "required": ["workflows"]
+}
+
+def test_cargar_workflows_valido():
+    with open("/app/docs/workflows.yaml") as f:
+        workflows = yaml.safe_load(f)
+    
+    validate(instance=workflows, schema=schema)
+    assert len(workflows["workflows"]) == 3
+    assert workflows["workflows"][2]["event"] == "k8s_deploy"
+    assert "<manifest>" in workflows["workflows"][2]["action"]
+    assert "manifest" in workflows["workflows"][2]
+
+def test_cargar_workflows_invalido():
+    invalid_yaml = """
+    workflows:
+      - event: invalid_event
+        action: echo test
+    """
+    with pytest.raises(jsonschema.ValidationError):
+        validate(instance=yaml.safe_load(invalid_yaml), schema=schema)
-- 
2.34.1

